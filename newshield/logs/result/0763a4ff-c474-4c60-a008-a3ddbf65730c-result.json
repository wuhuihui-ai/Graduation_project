{"name": "test_accept[2PF4C19411003559-8.1]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: Device 2PF4C19411003559 was not in the list of connected devices", "trace": "self = <newshield.test_case.test_add_contact.TestContact object at 0x00000177C4028D08>, udid2 = '2PF4C19411003559', version2 = '8.1'\n\n    @pytest.mark.run(order=3)\n    @allure.story(\"接收方-同意好友发送的请求\")\n    @pytest.mark.parametrize(\"udid2, version2\", Utils.yaml_data(yamlpath)[\"accept_fri_data\"])\n    def test_accept(self, udid2, version2):\n        '''\n        :param udid2: 手机的唯一标识\n        :param version2: 手机的Android版本\n        :return: 同意好友申请\n        '''\n        with allure.step(\"1、启动应用，进入首页\"\n                         \"2、点击新的好友进入\"\n                         \"3、点击接受，验证是否同意成功\"):\n>           result = self.launch.app_launch(udid2, version2).goto_first().goto_contact().new_friend().accept_add()\n\ntest_add_contact.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\app_launch\\app_launch.py:28: in app_launch\n    self.driver = webdriver.Remote(\"http://127.0.0.1:4723/wd/hub\", desire_caps)\n..\\..\\venv\\lib\\site-packages\\appium\\webdriver\\webdriver.py:157: in __init__\n    AppiumConnection(command_executor, keep_alive=keep_alive), desired_capabilities, browser_profile, proxy\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\n..\\..\\venv\\lib\\site-packages\\appium\\webdriver\\webdriver.py:226: in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, parameters)\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000177C3FBB308>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"An unknown server-side error occurred while pro...iver\\\\\\\\lib\\\\\\\\protocol\\\\\\\\protocol.js:388:37)\\\\n    at process._tickCallback (internal/process/next_tick.js:68:7)\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: Device 2PF4C19411003559 was not in the list of connected devices\n\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: WebDriverException"}, "description": "\n        :param udid2: 手机的唯一标识\n        :param version2: 手机的Android版本\n        :return: 同意好友申请\n        ", "steps": [{"name": "1、启动应用，进入首页2、点击新的好友进入3、点击接受，验证是否同意成功", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: Device 2PF4C19411003559 was not in the list of connected devices\n\n", "trace": "  File \"C:\\Users\\admin\\PycharmProjects\\workProject\\newshield\\test_case\\test_add_contact.py\", line 57, in test_accept\n    result = self.launch.app_launch(udid2, version2).goto_first().goto_contact().new_friend().accept_add()\n  File \"C:\\Users\\admin\\PycharmProjects\\workProject\\newshield\\app_launch\\app_launch.py\", line 28, in app_launch\n    self.driver = webdriver.Remote(\"http://127.0.0.1:4723/wd/hub\", desire_caps)\n  File \"c:\\users\\admin\\pycharmprojects\\workproject\\venv\\lib\\site-packages\\appium\\webdriver\\webdriver.py\", line 157, in __init__\n    AppiumConnection(command_executor, keep_alive=keep_alive), desired_capabilities, browser_profile, proxy\n  File \"c:\\users\\admin\\pycharmprojects\\workproject\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 157, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"c:\\users\\admin\\pycharmprojects\\workproject\\venv\\lib\\site-packages\\appium\\webdriver\\webdriver.py\", line 226, in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, parameters)\n  File \"c:\\users\\admin\\pycharmprojects\\workproject\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\users\\admin\\pycharmprojects\\workproject\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1625021120803, "stop": 1625021121480}], "parameters": [{"name": "udid2", "value": "'2PF4C19411003559'"}, {"name": "version2", "value": "'8.1'"}], "start": 1625021120803, "stop": 1625021121481, "uuid": "3134eb58-9b1a-41c0-a1ef-02a08929d472", "historyId": "30bfc571bae5c59e9636b24dcc5daf0c", "testCaseId": "2bbf2a2a276cb2cbbc7a9811c72818df", "fullName": "test_add_contact.TestContact#test_accept", "labels": [{"name": "feature", "value": "测试通讯录模块"}, {"name": "story", "value": "接收方-同意好友发送的请求"}, {"name": "tag", "value": "run(order=3)"}, {"name": "suite", "value": "test_add_contact"}, {"name": "subSuite", "value": "TestContact"}, {"name": "host", "value": "DESKTOP-TQUOQE3"}, {"name": "thread", "value": "18560-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_add_contact"}]}